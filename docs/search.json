[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Projects",
    "section": "",
    "text": "I’m honored to be a member of the CTRL_S project team.\n\nMobile communication technologies have rapidly evolved into a thriving industry and become one of the world’s largest markets. In this context, the widespread use of mobile devices globally has created a competitive market, compelling companies to race to expand their shares. Simultaneously, the internal dynamics and market characteristics of each country have played a crucial role in shaping the market shares of mobile vendors.\nIn this project, we examined the differences between the global market shares of mobile vendors and those in Turkey, along with the underlying reasons for these differences. Initially, we sought to understand how mobile market shares were distributed worldwide. Subsequently, we shifted our focus to Turkey, analyzing the dynamics of mobile vendors' market shares in this country.\nStay Tuned : Ctrl_S Project Page"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Aykut Şimşek's WebPage",
    "section": "",
    "text": "Hi, it’s Aykut. I’m currently in my junior year of studies in Industrial Engineering at Hacettepe University\n\nMy Card\n\n\n\n\nI also serve as a board member of IEEE Hacettepe, which stands as the largest techno-professional community globally and within our university.\n\n\n\nI love programming, playing games and listening / making songs.\n\n\n\n\n\n\nPura Game Jam 2022\n\n\n\n\n\n\n\nKariyer Fuarı 2022\n\n\n\n\n\n\n\nIEEE Hacettepe\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "imdb_assignment",
    "section": "",
    "text": "Packages\nFirstly, we have to install our packages.\n\n# install.packages(\"tidyverse\")\n# install.packages(\"rvest\")\n# install.packages(\"stringr\")\n# install.packages(\"ggplot2\")\n\n\n\nSecondly, we need to active these packages.\n\n library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n library(rvest)\n\nWarning: package 'rvest' was built under R version 4.3.2\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n library(stringr)\n library(ggplot2)\n\n\n\n\n\nDatas\nLinks which we will pull data\nhttps://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-25&num_votes=2499,&country_of_origin=TR&count=250\nhttps://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2499,&country_of_origin=TR&count=250\nAssigning links from which we will pull data\n\nlink1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-25&num_votes=2499,&country_of_origin=TR&count=250\"\nlink2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2499,&country_of_origin=TR&count=250\"\n\npage1 &lt;- read_html(link1)\npage2 &lt;- read_html(link2)\n\n\n\n\n\nWeb Wrangling\nWe must obtain a “data frame” by parsing the characteristic features of the films. Thus, we can perform our exploratory data analysis with the data set we created.\n(Since we have two separate links, after performing separate operations for both of them, we put them into a single vector with the c() function.)\n\nFor Titles :\n\ntitles1 &lt;- page1 %&gt;% html_nodes(\".dli-title\") %&gt;% html_text()\ntitles2 &lt;- page2 %&gt;% html_nodes(\".dli-title\") %&gt;% html_text()\n\ncombined_titles &lt;- c(titles1, titles2)\n# print(combined_titles)\n\n\n\n\n\nFor Years :\n\nyears1 &lt;- page1 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(1)\") %&gt;% html_text()\nyears2 &lt;- page2 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(1)\") %&gt;% html_text()\n\ncombined_years &lt;- c(years1, years2)\n# print(combined_years)\n\n\n\n\n\nFor Durations :\n\ndurations1 &lt;- page1 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(2)\") %&gt;% html_text()\ndurations2 &lt;- page2 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(2)\") %&gt;% html_text()\n\ncombined_durations &lt;- c(durations1, durations2)\n# print(combined_durations)\n\n\n\n\n\nFor Ratings :\n\nratings1 &lt;- page1 %&gt;% html_nodes(\".ratingGroup--imdb-rating\") %&gt;% html_text()\nratings2 &lt;- page2 %&gt;% html_nodes(\".ratingGroup--imdb-rating\") %&gt;% html_text()\n\ncombined_ratings &lt;- c(ratings1, ratings2)\n# print(combined_ratings)\n\n\n\n\n\nFor Votes :\n\nvotes1 &lt;- page1 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\nvotes2 &lt;- page2 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\n\ncombined_votes &lt;- c(votes1, votes2)\n# print(combined_votes)\n\n\n\n\n\n\n\nString Processing\nWe pulled our data from the web. Now we need to make our data suitable for the data frame with string processing.\n\nFor Titles :\n\ntitle_names1 &lt;- page1 %&gt;% html_nodes('.ipc-title__text')\ntitle_names1 &lt;- html_text(title_names1)\ntitle_names1 &lt;- tail(head(title_names1,-1),-1)\ntitle_names1 &lt;- str_split(title_names1, \" \", n=2)\ntitle_names1 &lt;- unlist(lapply(title_names1, function(x) {x[2]}))\n\ntitle_names2 &lt;- page2 %&gt;% html_nodes('.ipc-title__text')\ntitle_names2 &lt;- html_text(title_names2)\ntitle_names2 &lt;- tail(head(title_names2,-1),-1)\ntitle_names2 &lt;- str_split(title_names2, \" \", n=2)\ntitle_names2 &lt;- unlist(lapply(title_names2, function(x) {x[2]}))\n\ncombined_title_names &lt;- c(title_names1, title_names2)\n# print(combined_title_names)\n\n\n\n\n\nFor Years :\nSince the year data is available, we do not need to do any processing on them.\n\n\n\n\n\nFor Durations :\n\n# For Durations - 1\n# Saat ve daikaları ayırıp tanımlıyorum :\nhours1 &lt;- as.integer(str_extract(durations1, \"\\\\d+(?=h)\"))  # For Hours\nminutes1 &lt;- as.integer(str_extract(durations1, \"\\\\d+(?=m)\"))  # For Minutes\n\nhours1[is.na(hours1)] &lt;- as.integer(\"0\")     # sadece dakika olan var ise\nminutes1[is.na(minutes1)] &lt;- as.integer(\"0\") # sadece saat olan var ise\n\n# Süreleri dakika cinsine dönüştürmek için :\ntotal_duration_minutes1 &lt;- (hours1 * 60) + minutes1\n\n\n\n# For Durations - 2\nhours2 &lt;- as.integer(str_extract(durations2, \"\\\\d+(?=h)\"))\nminutes2 &lt;- as.integer(str_extract(durations2, \"\\\\d+(?=m)\"))\n\nhours2[is.na(hours2)] &lt;- as.integer(\"0\")\nminutes2[is.na(minutes2)] &lt;- as.integer(\"0\")\n\ntotal_duration_minutes2 &lt;- (hours2 * 60) + minutes2\n\n\ncombined_durations &lt;- c(total_duration_minutes1 , total_duration_minutes2)\n# print(combined_durations)\n\n\n\n\n\nFor Votes :\n\nvotes1 &lt;- page1 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\nvotes2 &lt;- page2 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\n\n# From ChatGPT :\nvotes1 &lt;- str_replace_all(votes1, \"[()]\", \"\")\nvotes2 &lt;- str_replace_all(votes2, \"[()]\", \"\")\n\n# From ChatGPT :\nvotes1 &lt;- str_remove_all(votes1, \"[^0-9.K]\")\nvotes2 &lt;- str_remove_all(votes2, \"[^0-9.K]\")\n\n\nvotes_numeric1 &lt;- str_remove_all(votes1, \"K\") %&gt;% as.numeric() * 1000\nvotes_numeric2 &lt;- str_remove_all(votes2, \"K\") %&gt;% as.numeric() * 1000\n\ncombined_votes &lt;- c(votes_numeric1 , votes_numeric2)\n# print(combined_votes)\n\n\n\n\n\nFor Ratings :\n\n# Parantezleri tamamen kaldırma\nrating_no_parant1 &lt;- str_replace_all(combined_ratings, \"\\\\(.*\\\\)\", \"\")\nrating_no_parant_no_space &lt;- str_trim(str_extract(rating_no_parant1, \"^\\\\d+\\\\.?\\\\d*\"))\n\n# Simdi sayıları double tipine çevirelim : \ncombined_ratings &lt;- as.double(rating_no_parant_no_space)\n\nclass(combined_ratings)\n\n[1] \"numeric\"\n\n# print(combined_ratings)\n\n\n\n\n\n\n\nCreating a Data Frame :\nWe have completed String Processing. All the data we have obtained now is of a simple and appropriate type suitable for adding to the data frame.\n\nimdb_movies_data &lt;- data.frame(Title = combined_title_names, Year = combined_years, Duration = combined_durations, Rate = combined_ratings, Vote = combined_votes)\n\n\n\n\n\n\nUpgrade Data Frame\nLet’s sort our data set in decreasing order of vote rate.\n\nimdb_movies_data_rate_decreasing &lt;- imdb_movies_data %&gt;%\n  arrange(desc(Rate))\n\nLet’s add a column to our data set showing the average rate by year.\n\nupdated_imdb_movies_data &lt;- imdb_movies_data_rate_decreasing %&gt;% \n  group_by(Year) %&gt;%\n  mutate(Mean_Rate = mean(Rate))\n\nLet’s add a column to our data set showing its rank according to vote rate :\n\nupdated_imdb_movies_data &lt;- imdb_movies_data_rate_decreasing %&gt;%\n  mutate(Order = row_number())\n\nLet’s examine the differences :\n\nhead(imdb_movies_data)\n\n                     Title Year Duration Rate  Vote\n1        Kuru Otlar Üstüne 2023      197  8.1  5100\n2  Istanbul Için Son Çagri 2023       91  5.3  7300\n3 Yedinci Kogustaki Mucize 2019      132  8.2 54000\n4           Ölümlü Dünya 2 2023      117  7.5  3400\n5                   Bihter 2023      113  3.6  3300\n6             Ölümlü Dünya 2018      107  7.6 30000\n\nhead(updated_imdb_movies_data)\n\n                         Title Year Duration Rate  Vote Order\n1               Hababam Sinifi 1975       87  9.2 43000     1\n2       CM101MMXI Fundamentals 2013      139  9.1 47000     2\n3                   Tosun Pasa 1976       90  8.9 24000     3\n4 Hababam Sinifi Sinifta Kaldi 1975       95  8.9 24000     4\n5                Süt Kardesler 1976       80  8.8 21000     5\n6             Saban Oglu Saban 1977       90  8.7 19000     6\n\n\n\n\n\n\nExtras\n\nLet’s find the 5 movies with the highest and lowest scores based on IMDb scores.\n\nimdb_movies_data_rate_decreasing &lt;- imdb_movies_data %&gt;%\n  arrange(desc(Rate))\n\n# En iyi ve en kotu 5 film :\nprint(\"En iyi oy oranına sahip 5 film:\")\n\n[1] \"En iyi oy oranına sahip 5 film:\"\n\nprint(head(imdb_movies_data_rate_decreasing, 5))\n\n                         Title Year Duration Rate  Vote\n1               Hababam Sinifi 1975       87  9.2 43000\n2       CM101MMXI Fundamentals 2013      139  9.1 47000\n3                   Tosun Pasa 1976       90  8.9 24000\n4 Hababam Sinifi Sinifta Kaldi 1975       95  8.9 24000\n5                Süt Kardesler 1976       80  8.8 21000\n\n# En alttaki 5 satırı yazdır\nprint(\"En kotu oy oranına sahip 5 film:\")\n\n[1] \"En kotu oy oranına sahip 5 film:\"\n\nprint(tail(imdb_movies_data_rate_decreasing, 5))\n\n                             Title Year Duration Rate  Vote\n466                 Cumali Ceber 2 2018      100  1.2 10000\n467                          Müjde 2022       48  1.2  9900\n468              15/07 Safak Vakti 2021       95  1.2 21000\n469 Cumali Ceber: Allah Seni Alsin 2017      100  1.0 39000\n470                           Reis 2017      108  1.0 74000\n\n\n\n\n\n\nLet’s examine the imdb data of 4 movies I like.\n\nsearch_film &lt;- function(name_of_the_film) {\n  result &lt;- imdb_movies_data_rate_decreasing[imdb_movies_data_rate_decreasing$Title == name_of_the_film, ]\n  return(result)\n}\n\nsearch_film(\"Senden Bana Kalan\")\n\n                Title Year Duration Rate Vote\n264 Senden Bana Kalan 2015      117  6.5 3400\n\nsearch_film(\"Aykut Eniste\")\n\n           Title Year Duration Rate Vote\n194 Aykut Eniste 2019      115    7 7400\n\nsearch_film(\"Kolonya Cumhuriyeti\")\n\n                  Title Year Duration Rate Vote\n351 Kolonya Cumhuriyeti 2017      110  5.8 5400\n\nsearch_film(\"Recep Ivedik 2\")\n\n             Title Year Duration Rate  Vote\n417 Recep Ivedik 2 2009      107  4.5 22000\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "THAT’S ME",
    "section": "",
    "text": "-&gt; Here is MY CV"
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "THAT’S ME",
    "section": "Employements",
    "text": "Employements\n\nIEEE Hacettepe, Administrative Coordinator of the Computer Society, 2022-2023.\nIoT Turkey, University Representative, 2022-2023.\nIEEE Hacettepe, Vice Chairman of the Board of Directors, 2023 - ongoing.\n(other areas) ------------------------------------------------------\n\n2 years as a waiter\n1 year as an ice cream seller\n2 years as a barista\n2 years as a wedding organizer\n( I have not worked in a field related to my profession yet )"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "THAT’S ME",
    "section": "Internships",
    "text": "Internships\n“I hope this place will fill up in a few months.”"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "intr_R_assignment",
    "section": "",
    "text": "TASK-1 : Video Review : {gt} Table Battles || Eurovision || RStudio ( Posit PBCV) asdasddasd\n\nJesse and Rich are having a little competition to create the Eurovision Song Contest Winners album. They will both take turns creating a table in R using the data containing the Competition Winners.\nhttps://liamdbailey.com/posts/2020-11-27-making-beautiful-tables-with-gt/ From there they received the data for free.\nJesse said that he wanted to use the flags and codes of the country and that they were all ready on the Liam D. Bailey site and that he spent 3 or 4 hours trying to do this. This part was a bit challenging. (It is necessary to have the files ready, then use the text conversion and then other image functions.)\nShe found the title by googling it with a beautiful font called “Rock Salt”. (I will use this too.)\nSince he wanted to have a table that responds to different inputs, he customized the table by adding “chose a country” and “chose a rank form 1 to 3” options with some coding. For example, when Germany is selected, Germany data appears. It is also possible to select multiple countries at the same time.\nRich created an animated painting by adding gifs he took from YouTube next to the songs. At the same time, the background of the “Eurovision” text in the title has a structure that slides and changes color.\nI would never have thought that such things could be done with R. A truly impressive work has emerged.\n\n\n\nTASK-2 : Differences between R and Python\n\n1- Syntax Difference\n\nAssignment Method\n\nmy_name &lt;- \"Aykut Simsek\"\nprint(my_name)\n\n[1] \"Aykut Simsek\"\n\n\n\nmyName = \"Aykut Simsek\"\nprint(myName)\n\nAykut Simsek\n\n\n\n\n\n2- Vectors and Lists\nOne of the frequently used tools for storing data in Python is list. However, in the R language, vector are used to store data.\n\n# We can use c() function for creating a vector.\nmy_courses &lt;- c(\"Data Anlytics\", \"Quality Management\", \"Material Science\", \"Probability and Statistics\", \"Production Planning and Control\", \"MUH101\")\nprint(my_courses)\n\n[1] \"Data Anlytics\"                   \"Quality Management\"             \n[3] \"Material Science\"                \"Probability and Statistics\"     \n[5] \"Production Planning and Control\" \"MUH101\"                         \n\n\n\n# We can use [] for creating a list.\nmyCourses = [\"Data Anlytics\", \"Quality Management\", \"Material Science\", \"Probability and Statistics\", \"Production Planning and Control\", \"MUH101\"]\nprint(myCourses)\n\n['Data Anlytics', 'Quality Management', 'Material Science', 'Probability and Statistics', 'Production Planning and Control', 'MUH101']\n\n\n\n\n3- Indexing\n\nmy_favorite_teacher &lt;- \"Erdi Dasdemir\"\n# It is a real information\nmy_favorite_teacher[0]   # -&gt; character(0), did not give us \"E\"\n\ncharacter(0)\n\nmy_numbers &lt;- c(1, 10, 100, 1000)\nmy_numbers[1]            # -&gt; first element\n\n[1] 1\n\nmy_numbers[1:3]          # -&gt; 1 and 3 both included\n\n[1]   1  10 100\n\n\n\nmyFavoriteTeacher = \"Erdi Dasdemir\"\n# It is a real information\nmyFavoriteTeacher[0]      # -&gt; gives us \"E\"\n\n'E'\n\nmyNumbers = (1, 10, 100, 1000)\nmyNumbers[0]             # -&gt; first element\n\n1\n\nmyNumbers[1]             # -&gt; second element (not first)\n\n10\n\nmyNumbers[1:3]           # -&gt; 1 included and 3 excluded\n\n(10, 100)\n\n\n\n\n\nTASK-3 : NA Example\n\nlibrary(\"dslabs\")\n\nWarning: package 'dslabs' was built under R version 4.3.2\n\ndata(na_example)\nprint(na_example)\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nnumber_of_na &lt;- sum(is.na(na_example))\nprint(number_of_na)\n\n[1] 145\n\ncat(\"Bu vektorde toplam\", number_of_na, \"adet NA bulunmaktadır\")\n\nBu vektorde toplam 145 adet NA bulunmaktadır\n\n\n\nPython’da yaptığımız gibi print içerisinde string ve değişkeni aynı anda R’da ekrana yazdıramadım.\nChatGPT’ye “R dilinde tek parantez içinde hem bir değişken hem bir character türünü ekrana yazdırabileceğimiz bir fonksiyon bulunuyor mu?” diye sordum.\n*degisken &lt;- 42     character &lt;- \"Merhaba, Dünya!\"\nDeğişken ve karakter türünü tek parantez içinde ekrana verdirme: cat(\"Değişken: \", degisken, \" Karakter: \", character, \"\\n\")*\nBu çıktıyı aldım ve R’da bu işlev için cat() fonksiyonunu kullanmamız gerektiğini öğrendim.\n\n\nlibrary(\"dslabs\")\ndata(na_example)\n\nnaless_example &lt;- ifelse(is.na(na_example), 0, na_example)\n\nprint(naless_example)\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\n\n\nNA’lar yerine “0” ekleyemediğim için ChatGPT’den yardım aldım.\n# NA’ları 0 ile doldur na_example_filled &lt;- ifelse(is.na(na_example), 0, na_example)\nBu kod, is.na fonksiyonuyla na_example veri çerçevesindeki NA değerlerini kontrol eder ve ifelse ile NA değerlerini 0 ile değiştirir. Ardından, na_example_filled adlı yeni bir veri çerçevesi veya vektör oluşturulur ve NA değerleri 0 ile değiştirilmiş şekilde görüntülenir.\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "||| This is the page for the assignments of my ‘Data Analytics’ course. You can navigate to the relevant assignment using the menu on the right. |||\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "Survey Report\nHere is my survey report about the quality dimensions that are considered important in smartphones. ( October - 2023 ) ( Quality Management )\n\n\n\n\n\nBeats\nHere is my favorite beats that I produced.\n\nForest\nand another :\nNameless\nand one more :\nSeventeen\n\n\n\n\nPura Game Jam\nThe final stage video of the “Pura Game Jam’23” competition that I organized within the scope of the “Computer Society” unit, of which I served as the president for the 2022-2023 academic year :\n\nFinal Etap Video ( Live Cast )\n\n\n\n\nAdvice Video (Mech. Eng.)\nI have a college application advice video from the days when I was studying mechanical engineering. Students who watched this video got accepted to the Hacettepe University Mechanical Engineering program. However, by the time they approached me, I had switched to industrial engineering 😅😅😉😉\n\n\n\n\nInternship Report (Mec. Eng.)\nHere is my Internship report about “Mechanical Engineering Workshops” that I prepared in my first year of mechanical engineering. ( September - 2021 )\n\n\n\n\n Back to top"
  },
  {
    "objectID": "GitHub_MySite/Survey (TEST).html",
    "href": "GitHub_MySite/Survey (TEST).html",
    "title": "Survey (TEST)",
    "section": "",
    "text": "Here is my survey about the quality dimensions that are considered important in smartphones :\nSurvey Link\n\n\n\n Back to top"
  },
  {
    "objectID": "GitHub_MySite/HW1.html",
    "href": "GitHub_MySite/HW1.html",
    "title": "HW-1",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "Survey (TEST).html",
    "href": "Survey (TEST).html",
    "title": "Survey",
    "section": "",
    "text": "Here is my survey about the quality dimensions that are considered important in smartphones :\nSurvey Link\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/Project.html",
    "href": "docs/Project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the [group name] project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://[your-project-url].\nSummary\n[provide a biref summary of your project]\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-3.html",
    "href": "assignments/assignment-3.html",
    "title": "Assignment-3",
    "section": "",
    "text": "TASK-1 : Differences between R and Python\n1- Syntax Difference\nAssignment Method\n\nmy_name &lt;- \"Aykut Simsek\"\nprint(my_name)\n\n[1] \"Aykut Simsek\"\n\n\n\nmyName = \"Aykut Simsek\"\nprint(myName)\n\nAykut Simsek\n\n\nVectors vs Lists\nOne of the frequently used tools for storing data in Python is list. However, in the R language, vector are used to store data.\n\n# We can use c() function for creating a vector.\nmy_courses &lt;- c(\"Data Anlytics\", \"Quality Management\", \"Material Science\", \"Probability and Statistics\", \"Production Planning and Control\", \"MUH101\")\nprint(my_courses)\n\n[1] \"Data Anlytics\"                   \"Quality Management\"             \n[3] \"Material Science\"                \"Probability and Statistics\"     \n[5] \"Production Planning and Control\" \"MUH101\"                         \n\n\n\n# We can use [] for creating a list.\nmyCourses = [\"Data Anlytics\", \"Quality Management\", \"Material Science\", \"Probability and Statistics\", \"Production Planning and Control\", \"MUH101\"]\nprint(myCourses)\n\n['Data Anlytics', 'Quality Management', 'Material Science', 'Probability and Statistics', 'Production Planning and Control', 'MUH101']\n\n\nIndexing\n\nmy_favorite_teacher &lt;- \"Erdi Dasdemir\"\n# It is a real information\nmy_favorite_teacher[0]   # -&gt; character(0), did not give us \"E\"\n\ncharacter(0)\n\nmy_numbers &lt;- c(1, 10, 100, 1000)\nmy_numbers[1]            # -&gt; first element\n\n[1] 1\n\nmy_numbers[1:3]          # -&gt; 1 and 3 both included\n\n[1]   1  10 100\n\n\n\nmyFavoriteTeacher = \"Erdi Dasdemir\"\n# It is a real information\nmyFavoriteTeacher[0]      # -&gt; gives us \"E\"\n\n'E'\n\nmyNumbers = (1, 10, 100, 1000)\nmyNumbers[0]             # -&gt; first element\n\n1\n\nmyNumbers[1]             # -&gt; second element (not first)\n\n10\n\nmyNumbers[1:3]           # -&gt; 1 included and 3 excluded\n\n(10, 100)\n\n\nTASK-2 : NA Example\n\nlibrary(\"dslabs\")\ndata(na_example)\nprint(na_example)\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\nnumber_of_na &lt;- sum(is.na(na_example))\nprint(number_of_na)\n\n[1] 145\n\ncat(\"Bu vektorde toplam\", number_of_na, \"adet NA bulunmaktadır\")\n\nBu vektorde toplam 145 adet NA bulunmaktadır\n\n\n\nlibrary(\"dslabs\")\ndata(na_example)\n\nnaless_example &lt;- ifelse(is.na(na_example), 0, na_example)\n\nprint(naless_example)\n\n   [1] 2 1 3 2 1 3 1 4 3 2 2 0 2 2 1 4 0 1 1 2 1 2 2 1 2 5 0 2 2 3 1 2 4 1 1 1 4\n  [38] 5 2 3 4 1 2 4 1 1 2 1 5 0 0 0 1 1 5 1 3 1 0 4 4 7 3 2 0 0 1 0 4 1 2 2 3 2\n  [75] 1 2 2 4 3 4 2 3 1 3 2 1 1 1 3 1 0 3 1 2 2 1 2 2 1 1 4 1 1 2 3 3 2 2 3 3 3\n [112] 4 1 1 1 2 0 4 3 4 3 1 2 1 0 0 0 0 1 5 1 2 1 3 5 3 2 2 0 0 0 0 3 5 3 1 1 4\n [149] 2 4 3 3 0 2 3 2 6 0 1 1 2 2 1 3 1 1 5 0 0 2 4 0 2 5 1 4 3 3 0 4 3 1 4 1 1\n [186] 3 1 1 0 0 3 5 2 2 2 3 1 2 2 3 2 1 0 2 0 1 0 0 2 1 1 0 3 0 1 2 2 1 3 2 2 1\n [223] 1 2 3 1 1 1 4 3 4 2 2 1 4 1 0 5 1 4 0 3 0 0 1 1 5 2 3 3 2 4 0 3 2 5 0 2 3\n [260] 4 6 2 2 2 0 2 0 2 0 3 3 2 2 4 3 1 4 2 0 2 4 0 6 2 3 1 0 2 2 0 1 1 3 2 3 3\n [297] 1 0 1 4 2 1 1 3 2 1 2 3 1 0 2 3 3 2 1 2 3 5 5 1 2 3 3 1 0 0 1 2 4 0 2 1 1\n [334] 1 3 2 1 1 3 4 0 1 2 1 1 3 3 0 1 1 3 5 3 2 3 4 1 4 3 1 0 2 1 2 2 1 2 2 6 1\n [371] 2 4 5 0 3 4 2 1 1 4 2 1 1 1 1 2 1 4 4 1 3 0 3 3 0 2 0 1 2 1 1 4 2 1 4 4 0\n [408] 1 2 0 3 2 2 2 1 4 3 6 1 2 3 1 3 2 2 2 1 1 3 2 1 1 1 3 2 2 0 4 4 4 1 1 0 4\n [445] 3 0 1 3 1 3 2 4 2 2 2 3 2 1 4 3 0 1 4 3 1 3 2 0 3 0 1 3 1 4 1 1 1 2 4 3 1\n [482] 2 2 2 3 2 3 1 1 0 3 2 1 1 2 0 2 2 2 3 3 1 1 2 0 1 2 1 1 3 3 1 3 1 1 1 1 1\n [519] 2 5 1 1 2 2 1 1 0 1 4 1 2 4 1 3 2 0 1 1 0 2 1 1 4 2 3 3 1 5 3 1 1 2 0 1 1\n [556] 3 1 3 2 4 0 2 3 2 1 2 1 1 1 2 2 3 1 5 2 0 2 0 3 2 2 2 1 5 3 2 3 1 0 3 1 2\n [593] 2 2 1 2 2 4 0 6 1 2 0 1 1 2 2 3 0 3 2 3 3 4 2 0 2 0 4 0 1 1 2 2 3 1 1 1 3\n [630] 0 2 5 0 7 1 0 4 3 3 1 0 1 1 1 1 3 2 4 2 2 3 0 0 1 4 3 2 2 2 3 2 4 2 2 4 0\n [667] 0 0 6 3 3 1 4 4 2 1 0 1 6 0 3 3 2 1 1 6 0 1 5 1 0 2 6 2 0 4 1 3 1 2 0 1 1\n [704] 3 1 2 4 2 1 3 2 4 3 2 2 1 1 5 6 4 2 2 2 2 4 0 1 2 2 2 2 4 5 0 0 0 4 3 3 3\n [741] 2 4 2 4 0 0 0 0 2 1 0 2 4 3 2 0 2 3 1 3 4 0 1 2 1 2 0 3 1 2 1 2 1 2 1 2 2\n [778] 2 2 1 1 3 3 1 3 4 3 0 0 4 2 3 2 1 3 2 4 2 2 3 1 2 4 3 3 4 0 1 4 2 1 1 1 3\n [815] 1 5 2 2 4 2 0 1 3 1 2 0 1 2 1 2 1 0 1 3 2 3 2 0 2 1 4 2 0 0 0 2 4 2 0 0 3\n [852] 1 0 5 5 2 2 2 0 2 1 3 1 3 2 4 2 4 0 4 1 2 3 2 3 3 2 3 2 2 2 1 3 2 4 2 0 3\n [889] 3 2 2 0 0 3 2 1 2 4 1 1 1 1 4 3 2 0 3 2 0 1 0 3 2 1 1 1 2 0 2 2 3 3 2 0 0\n [926] 4 5 2 2 2 1 2 3 1 3 3 4 3 0 1 1 1 0 4 3 5 1 1 2 0 2 2 2 2 5 2 2 3 1 2 3 0\n [963] 1 2 0 0 2 0 3 1 1 2 5 3 5 1 1 4 0 2 1 3 1 1 2 4 3 3 3 0 1 1 2 2 1 1 2 2 0\n[1000] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "organizations.html",
    "href": "organizations.html",
    "title": "ORGANIZATIONS",
    "section": "",
    "text": "Click for the final stage"
  },
  {
    "objectID": "MyStudies.html",
    "href": "MyStudies.html",
    "title": "WorkMyself",
    "section": "",
    "text": "Python, basit ve okunaklD1 bir sC6zdizimine sahip bir programlama dilidir. Python’da temel sC6zdizimi aE\u001faD\u001fD1daki gibi C6zetlenebilir:\nDeD\u001fiE\u001fkenler:\n\nx = 5  # x adlD1 bir deD\u001fiE\u001fkene 5 deD\u001ferini atama\n\nD0fadeler:\n\ny = x + 3  # x deD\u001fiE\u001fkeni ile 3'C&lt; toplama ve sonucu y deD\u001fiE\u001fkenine atama\n\nYorumlar:\n\n# Bu bir yorumdur\n\nStrings:\n\nad = \"Ahmet\"  # C\u0007ift tD1rnak kullanarak bir dize oluE\u001fturma\nsoyad = 'YD1lmaz'  # Tek tD1rnak kullanarak bir dize oluE\u001fturma\n\nKoE\u001fullu D0fadeler:\n\nif x &gt; 10:\n    print(\"x 10'dan bC&lt;yC&lt;k\")\nelse:\n    print(\"x 10 veya daha kC&lt;C'C&lt;k\")\n\nFonksiyonlar:\n\ndef toplama(a, b):\n    return a + b\n\nListeler:\n\nmeyveler = [\"elma\", \"armut\", \"muz\"]\n\nBu, Python’D1n temel sC6zdiziminin sadece bir C6zetidir.\n\n\n\n\n\ndef my_function():\nprint(\"Hello, World!\")\n\nBu hata, girinti dC&lt;zeylerinin uyumsuz olduD\u001funu gC6sterir. D0kinci satD1rD1n baE\u001flangD1cD1, bir C6ncekine gC6re fazla girintili veya eksik girintilidir.\n\n\n\n\nmessage = \"This is an unclosed string\n\nBu hata, bir dizeyi dC&lt;zgC&lt;n E\u001fekilde kapatmadD1D\u001fD1nD1zda meydana gelir.\n\n\n\n\nx = 10\nif x &gt; 5\n    print(\"x is greater than 5\")\n\nBu hata, if ifadesinin sonunda iki nokta C&lt;st C&lt;ste eksik olduD\u001funda veya baE\u001fka bir sC6zdizimi hatasD1 olduD\u001funda meydana gelebilir.\n\n\n\n\nif x &gt; 5\n    print(\"x is greater than 5\")\n\nBu hata, if veya baE\u001fka bir kontrol yapD1sD1nD1n ardD1ndan gelen iki nokta C&lt;st C&lt;ste (:) eksik olduD\u001funda meydana gelir.\n\n\n\n\nif x &gt; 5:\nprint(\"x is greater than 5\")\n\nBu hata, beklenmeyen bir girinti dC&lt;zeyi olduD\u001funda veya girinti seviyeleri uyumsuz olduD\u001funda meydana gelir.\n\n\n\n\nmy-variable = 42 #!!!!!!!!!!!!!!!!!!!\n\nBu hata, deD\u001fiE\u001fken adD1 iC’inde geC’erli olmayan karakterlerin kullanD1ldD1D\u001fD1nda meydana gelir.\n\n\n\n\nresult = 10 @ 5\n\n\n\n\n\nfor = 10\n\n\n\n\n\n\n\n\n\nresult = 10 / 0\n\nBu kod C’alD1E\u001ftD1rD1ldD1D\u001fD1nda Python, sD1fD1ra bC6lme hatasD1 verir C’C&lt;nkC&lt; bir sayD1yD1 sD1fD1ra bC6lmek matematiksel olarak tanD1msD1zdD1r.\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, result = 10/0 yazD1nca kD1rmD1zD1 bir hata uyarD1sD1 C’D1kmaz. C\u0007C&lt;nkC&lt; yazD1m kuralD1 olarak tamamen doD\u001fru. Yani result = 10/1 dese C’alD1E\u001facak. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nprint(undefined_variable)\nprint(variable)\n# But we didnt assignment for variable\n\n\nresult = calculate(5, 3)\n\nTanD1mlanmamD1E\u001f bir deD\u001fiE\u001fkeni kullanmaya C’alD1E\u001ftD1D\u001fD1nD1zda bu hata oluE\u001fur.\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, calculate fonksiyonu tanD1mlanmD1E\u001f olsa bu kod C\u0007ALIE\u001eACAKTI. Yani YAZIM OLARAK BD0 HATA YOK. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nresult = \"5\" + 10\n\nFarklD1 veri tC&lt;rlerini doD\u001frudan birleE\u001ftirmeye C’alD1E\u001ftD1D\u001fD1nD1zda Python TypeError verir.\n\n\n\n\nmy_list = [1, 2, 3]\nprint(my_list[5])\n\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, listede 5. indexte ELEMAN OLSAYDI kod C\u0007ALIE\u001eACAKTI. Yani yazD1msal olarak bir hata yok. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nwith open(\"dosya_yok.txt\", \"r\") as file:\n    content = file.read()\n\n===&gt; AynD1 durum…\n\n\n\n\nnumber = int(\"abc\")\n\n\n\n\n\nmy_list = [1, 2, 3]\nmy_list.split()\n\nBir nesnenin belirli bir niteliD\u001fi (attribute) veya yC6ntemi (method) olmadD1D\u001fD1nda bu hata meydana gelir.\n\n\n\n\ndef recursive_function(n):\n    return recursive_function(n - 1)\n    # - sonsuza gidiyor.\n\nrecursive_function(10)\n\nSonsuz bir E\u001fekilde yinelemeye C’alD1E\u001ftD1D\u001fD1nD1zda RecursionError oluE\u001fur.\n\n\n\nBu hata, kullanD1cD1 programD1n C’alD1E\u001fmasD1nD1 klavyeden kesmeye C’alD1E\u001ftD1D\u001fD1nda oluE\u001fur (genellikle Ctrl+C tuE\u001f kombinasyonu kullanD1lD1r).\n\n\n\nBellek tC&lt;kenirse veya programD1nD1zD1n kullanabileceD\u001fi bellek sD1nD1rD1nD1 aE\u001ftD1D\u001fD1nD1zda bu hata oluE\u001fur.\n\n\n\n\n\n\nD0E\u001flem sD1rasD1nda yanlD1E\u001f bir mantD1ksal operatC6r kullanmak, beklenen sonuC’larD1 elde edememenize neden olabilir.\n\nif x &lt; 5 and x &gt; 10:\n    print(\"x, 5 ile 10 arasD1nda deD\u001fil\")\n\nBu kod, x’in hem 5’ten kC&lt;C’C&lt;k hem de 10’dan bC&lt;yC&lt;k olmasD1nD1 kontrol eder, bu yC&lt;zden hiC’bir zaman doD\u001fru olmaz.\n\n\n\nBir fonksiyonun beklenen sonucu dC6ndC&lt;rmemesi, semantik bir hatadD1r.\n\ndef toplama(a, b):\n    return a - b\n\nsonuc = toplama(5, 3)  # Beklenen sonuC' 5 + 3 = 8, ancak fonksiyon yanlD1E\u001f sonuC' dC6ndC&lt;rC&lt;yor\n\n\n\n\nDC6ngC&lt;lerin yanlD1E\u001f baE\u001flatD1lmasD1 veya yanlD1E\u001f bir E\u001fekilde C’alD1E\u001ftD1rD1lmasD1 semantik hatalara yol aC’abilir.\n\nfor i in range(10):\n    if i &lt; 5:\n        print(\"Daha bC&lt;yC&lt;k!\")\n\nBu dC6ngC&lt;, i 5’ten kC&lt;C’C&lt;k olduD\u001funda hiC’bir E\u001fey yazdD1rmaz, ancak muhtemelen her zaman doD\u001fru sonuC’ almak isteniyordur.\nSemantik hatalar, kodun mantD1D\u001fD1nD1 anlayarak ve beklenen sonuC’larD1 dikkate alarak tespit edilmeli ve giderilmelidir. Genellikle kod incelemesi ve testler kullanD1larak bu tC&lt;r hatalar bulunur ve dC&lt;zeltilir.\nPythonda bu hatalar diD\u001fer hatalar gibi uyarD1 olarak verilmiyor."
  },
  {
    "objectID": "MyStudies.html#syntax",
    "href": "MyStudies.html#syntax",
    "title": "WorkMyself",
    "section": "",
    "text": "Python, basit ve okunaklD1 bir sC6zdizimine sahip bir programlama dilidir. Python’da temel sC6zdizimi aE\u001faD\u001fD1daki gibi C6zetlenebilir:\nDeD\u001fiE\u001fkenler:\n\nx = 5  # x adlD1 bir deD\u001fiE\u001fkene 5 deD\u001ferini atama\n\nD0fadeler:\n\ny = x + 3  # x deD\u001fiE\u001fkeni ile 3'C&lt; toplama ve sonucu y deD\u001fiE\u001fkenine atama\n\nYorumlar:\n\n# Bu bir yorumdur\n\nStrings:\n\nad = \"Ahmet\"  # C\u0007ift tD1rnak kullanarak bir dize oluE\u001fturma\nsoyad = 'YD1lmaz'  # Tek tD1rnak kullanarak bir dize oluE\u001fturma\n\nKoE\u001fullu D0fadeler:\n\nif x &gt; 10:\n    print(\"x 10'dan bC&lt;yC&lt;k\")\nelse:\n    print(\"x 10 veya daha kC&lt;C'C&lt;k\")\n\nFonksiyonlar:\n\ndef toplama(a, b):\n    return a + b\n\nListeler:\n\nmeyveler = [\"elma\", \"armut\", \"muz\"]\n\nBu, Python’D1n temel sC6zdiziminin sadece bir C6zetidir.\n\n\n\n\n\ndef my_function():\nprint(\"Hello, World!\")\n\nBu hata, girinti dC&lt;zeylerinin uyumsuz olduD\u001funu gC6sterir. D0kinci satD1rD1n baE\u001flangD1cD1, bir C6ncekine gC6re fazla girintili veya eksik girintilidir.\n\n\n\n\nmessage = \"This is an unclosed string\n\nBu hata, bir dizeyi dC&lt;zgC&lt;n E\u001fekilde kapatmadD1D\u001fD1nD1zda meydana gelir.\n\n\n\n\nx = 10\nif x &gt; 5\n    print(\"x is greater than 5\")\n\nBu hata, if ifadesinin sonunda iki nokta C&lt;st C&lt;ste eksik olduD\u001funda veya baE\u001fka bir sC6zdizimi hatasD1 olduD\u001funda meydana gelebilir.\n\n\n\n\nif x &gt; 5\n    print(\"x is greater than 5\")\n\nBu hata, if veya baE\u001fka bir kontrol yapD1sD1nD1n ardD1ndan gelen iki nokta C&lt;st C&lt;ste (:) eksik olduD\u001funda meydana gelir.\n\n\n\n\nif x &gt; 5:\nprint(\"x is greater than 5\")\n\nBu hata, beklenmeyen bir girinti dC&lt;zeyi olduD\u001funda veya girinti seviyeleri uyumsuz olduD\u001funda meydana gelir.\n\n\n\n\nmy-variable = 42 #!!!!!!!!!!!!!!!!!!!\n\nBu hata, deD\u001fiE\u001fken adD1 iC’inde geC’erli olmayan karakterlerin kullanD1ldD1D\u001fD1nda meydana gelir.\n\n\n\n\nresult = 10 @ 5\n\n\n\n\n\nfor = 10"
  },
  {
    "objectID": "MyStudies.html#runtime-errors",
    "href": "MyStudies.html#runtime-errors",
    "title": "WorkMyself",
    "section": "",
    "text": "result = 10 / 0\n\nBu kod C’alD1E\u001ftD1rD1ldD1D\u001fD1nda Python, sD1fD1ra bC6lme hatasD1 verir C’C&lt;nkC&lt; bir sayD1yD1 sD1fD1ra bC6lmek matematiksel olarak tanD1msD1zdD1r.\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, result = 10/0 yazD1nca kD1rmD1zD1 bir hata uyarD1sD1 C’D1kmaz. C\u0007C&lt;nkC&lt; yazD1m kuralD1 olarak tamamen doD\u001fru. Yani result = 10/1 dese C’alD1E\u001facak. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nprint(undefined_variable)\nprint(variable)\n# But we didnt assignment for variable\n\n\nresult = calculate(5, 3)\n\nTanD1mlanmamD1E\u001f bir deD\u001fiE\u001fkeni kullanmaya C’alD1E\u001ftD1D\u001fD1nD1zda bu hata oluE\u001fur.\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, calculate fonksiyonu tanD1mlanmD1E\u001f olsa bu kod C\u0007ALIE\u001eACAKTI. Yani YAZIM OLARAK BD0 HATA YOK. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nresult = \"5\" + 10\n\nFarklD1 veri tC&lt;rlerini doD\u001frudan birleE\u001ftirmeye C’alD1E\u001ftD1D\u001fD1nD1zda Python TypeError verir.\n\n\n\n\nmy_list = [1, 2, 3]\nprint(my_list[5])\n\n===&gt; E\u001eC6yle dC&lt;E\u001fC&lt;n, listede 5. indexte ELEMAN OLSAYDI kod C\u0007ALIE\u001eACAKTI. Yani yazD1msal olarak bir hata yok. YAND0 SYNTAX ERROR DED\u001eD0L.\n\n\n\n\nwith open(\"dosya_yok.txt\", \"r\") as file:\n    content = file.read()\n\n===&gt; AynD1 durum…\n\n\n\n\nnumber = int(\"abc\")\n\n\n\n\n\nmy_list = [1, 2, 3]\nmy_list.split()\n\nBir nesnenin belirli bir niteliD\u001fi (attribute) veya yC6ntemi (method) olmadD1D\u001fD1nda bu hata meydana gelir.\n\n\n\n\ndef recursive_function(n):\n    return recursive_function(n - 1)\n    # - sonsuza gidiyor.\n\nrecursive_function(10)\n\nSonsuz bir E\u001fekilde yinelemeye C’alD1E\u001ftD1D\u001fD1nD1zda RecursionError oluE\u001fur.\n\n\n\nBu hata, kullanD1cD1 programD1n C’alD1E\u001fmasD1nD1 klavyeden kesmeye C’alD1E\u001ftD1D\u001fD1nda oluE\u001fur (genellikle Ctrl+C tuE\u001f kombinasyonu kullanD1lD1r).\n\n\n\nBellek tC&lt;kenirse veya programD1nD1zD1n kullanabileceD\u001fi bellek sD1nD1rD1nD1 aE\u001ftD1D\u001fD1nD1zda bu hata oluE\u001fur."
  },
  {
    "objectID": "MyStudies.html#sementic-errors-anlamsal-hatalar",
    "href": "MyStudies.html#sementic-errors-anlamsal-hatalar",
    "title": "WorkMyself",
    "section": "",
    "text": "D0E\u001flem sD1rasD1nda yanlD1E\u001f bir mantD1ksal operatC6r kullanmak, beklenen sonuC’larD1 elde edememenize neden olabilir.\n\nif x &lt; 5 and x &gt; 10:\n    print(\"x, 5 ile 10 arasD1nda deD\u001fil\")\n\nBu kod, x’in hem 5’ten kC&lt;C’C&lt;k hem de 10’dan bC&lt;yC&lt;k olmasD1nD1 kontrol eder, bu yC&lt;zden hiC’bir zaman doD\u001fru olmaz.\n\n\n\nBir fonksiyonun beklenen sonucu dC6ndC&lt;rmemesi, semantik bir hatadD1r.\n\ndef toplama(a, b):\n    return a - b\n\nsonuc = toplama(5, 3)  # Beklenen sonuC' 5 + 3 = 8, ancak fonksiyon yanlD1E\u001f sonuC' dC6ndC&lt;rC&lt;yor\n\n\n\n\nDC6ngC&lt;lerin yanlD1E\u001f baE\u001flatD1lmasD1 veya yanlD1E\u001f bir E\u001fekilde C’alD1E\u001ftD1rD1lmasD1 semantik hatalara yol aC’abilir.\n\nfor i in range(10):\n    if i &lt; 5:\n        print(\"Daha bC&lt;yC&lt;k!\")\n\nBu dC6ngC&lt;, i 5’ten kC&lt;C’C&lt;k olduD\u001funda hiC’bir E\u001fey yazdD1rmaz, ancak muhtemelen her zaman doD\u001fru sonuC’ almak isteniyordur.\nSemantik hatalar, kodun mantD1D\u001fD1nD1 anlayarak ve beklenen sonuC’larD1 dikkate alarak tespit edilmeli ve giderilmelidir. Genellikle kod incelemesi ve testler kullanD1larak bu tC&lt;r hatalar bulunur ve dC&lt;zeltilir.\nPythonda bu hatalar diD\u001fer hatalar gibi uyarD1 olarak verilmiyor."
  },
  {
    "objectID": "my_pleasures.html",
    "href": "my_pleasures.html",
    "title": "My Pleasures",
    "section": "",
    "text": "Music empowers me.\nMy top lists in spotify\n1 - Mahkeme Şarkısı\n2 - Kurtulmak / Ahiyan\n3 - Kurtulamadım / Ahiyan\n4 - God’s Menu / Stray Kids\n5 - ITEM / Stray Kids\n6 - Get Lit / Stray Kids\n7 - 飞天 (Flying Apsaras) / Lay\n8 - Geceler / Sagopa Kajmer\n9 - Again / Jaden\n10 - N / Jaden\n11 - Serbest / Sagopa Kajmer\n12 - Guerilla / Ateez\n13 - Thunderous / Stray Kids\n14 - Favourite Girl Acoustic / Justin Bieber\n15 - Hikakomori / Bang Yongguk\n\n\n\n Back to top"
  },
  {
    "objectID": "my_favourites.html",
    "href": "my_favourites.html",
    "title": "Music empowers me.",
    "section": "",
    "text": "Music empowers me.\n\nMy top song lists in spotify\n1 - Mahkeme Şarkısı / Ahiyan\n2 - Kurtulmak / Ahiyan\n3 - Kurtulamadım / Ahiyan\n4 - God’s Menu / Stray Kids\n5 - ITEM / Stray Kids\n6 - Get Lit / Stray Kids\n7 - 飞天 (Flying Apsaras) / Lay\n8 - Geceler / Sagopa Kajmer\n9 - Again / Jaden\n10 - N / Jaden\n11 - Serbest / Sagopa Kajmer\n12 - Guerilla / Ateez\n13 - Thunderous / Stray Kids\n14 - Favourite Girl Acoustic / Justin Bieber\n15 - Hikakomori / Bang Yongguk\n16 - Ayrılık / Selda Bağcan\n17 - Öyle Bir Yerdeyim ki / Selda Bağcan\n\n\nMy top singer lists in spotify\n1 - Sagopa Kajmer\n2 - Stray Kids\n3 - Ahiyan\n4 - Taemin\n5 - Jaden\n6 - Justin Bieber\n7 - Bang Yongguk\n8 - Ateez\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "organizations.html#pura-game-jam23",
    "href": "organizations.html#pura-game-jam23",
    "title": "ORGANIZATIONS",
    "section": "",
    "text": "Click for the final stage"
  },
  {
    "objectID": "organizations.html#committee-meetings",
    "href": "organizations.html#committee-meetings",
    "title": "ORGANIZATIONS",
    "section": "Committee Meetings",
    "text": "Committee Meetings"
  },
  {
    "objectID": "project.html#emu-430-data-analytics-project",
    "href": "project.html#emu-430-data-analytics-project",
    "title": "Projects",
    "section": "",
    "text": "I’m honored to be a member of the CTRL_S project team.\nStay Tuned : Ctrl_S Project Page"
  },
  {
    "objectID": "project.html#emu-332-quality-management-project",
    "href": "project.html#emu-332-quality-management-project",
    "title": "Projects",
    "section": "EMU-332 Quality Management Project",
    "text": "EMU-332 Quality Management Project\nAkıllı telefon pazarına baktığımızda, bugünün en önemli pazarlarından biri olduğunu görüyoruz ve şirketlerin bu rekabetçi alanda öne çıkmak için farklı stratejiler benimsediği açıkça ortada. Şirketler, telefonlarının avantajlarını maksimize etmek için belirli kalite boyutlarına öncelik verirken, diğer boyutlara daha az önem atfederek tüketicilere sunuyorlar. Tüketiciler ise alım kararlarını verirken bu faktörleri göz önünde bulunduruyorlar.\nBu projede, Türkiye’deki akıllı telefon kullanıcılarının telefon satın alırken dikkate aldıkları kriterleri belirlemeye, öncelik verdikleri kalite boyutlarını tanımlamaya ve hangi boyutların onlar için daha az önemli olduğunu anlamaya çalışıldı. Yapılan anketle, önemli görülen boyutlar ile görülmeyen boyutlar arasında bir karşılaştırma yapılarak, kullanıcıların genel tercihleri, tercih ettikleri markalar ve eğilimleri hakkında bilgi edinilmiştir.\nPROJECT REPORT : QUALITY DIMENSIONS IN SMARTPHONES"
  },
  {
    "objectID": "organizations.html#devfest23---17.12.2023",
    "href": "organizations.html#devfest23---17.12.2023",
    "title": "ORGANIZATIONS",
    "section": "",
    "text": "## Pura Game Jam’23\n\n\n\n\n\n\n\n\n\n\nClick for the final stage\n ## Devfest’22 ( Google Developer Groups & IEEE Hacettepe )\n\n\n\n\n\n ## Career Fair’23\n\n\n\n\n\n # Programmix-V\n\n\n\n\n\n\n\n\n\n\n ## Committee Meetings"
  },
  {
    "objectID": "assignment22.html",
    "href": "assignment22.html",
    "title": "imdb_assignment",
    "section": "",
    "text": "Firstly, we have to install our packages.\n\n# install.packages(\"tidyverse\")\n# install.packages(\"rvest\")\n# install.packages(\"stringr\")\n# install.packages(\"ggplot2\")\n\n\n\nSecondly, we need to active these packages.\n\n library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n library(rvest)\n\nWarning: package 'rvest' was built under R version 4.3.2\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n library(stringr)\n library(ggplot2)"
  },
  {
    "objectID": "assignment22.html#packages",
    "href": "assignment22.html#packages",
    "title": "imdb_assignment",
    "section": "",
    "text": "Firstly, we have to install our packages.\n\n# install.packages(\"tidyverse\")\n# install.packages(\"rvest\")\n# install.packages(\"stringr\")\n# install.packages(\"ggplot2\")\n\n\n\nSecondly, we need to active these packages.\n\n library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n library(rvest)\n\nWarning: package 'rvest' was built under R version 4.3.2\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n library(stringr)\n library(ggplot2)"
  },
  {
    "objectID": "assignment22.html#datas",
    "href": "assignment22.html#datas",
    "title": "imdb_assignment",
    "section": "Datas",
    "text": "Datas\nLinks which we will pull data\nhttps://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-25&num_votes=2499,&country_of_origin=TR&count=250\nhttps://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2499,&country_of_origin=TR&count=250\nAssigning links from which we will pull data\n\nlink1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-25&num_votes=2499,&country_of_origin=TR&count=250\"\nlink2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2499,&country_of_origin=TR&count=250\"\n\npage1 &lt;- read_html(link1)\npage2 &lt;- read_html(link2)"
  },
  {
    "objectID": "assignment22.html#web-wrangling",
    "href": "assignment22.html#web-wrangling",
    "title": "imdb_assignment",
    "section": "Web Wrangling",
    "text": "Web Wrangling\nWe must obtain a “data frame” by parsing the characteristic features of the films. Thus, we can perform our exploratory data analysis with the data set we created.\n(Since we have two separate links, after performing separate operations for both of them, we put them into a single vector with the c() function.)\n\nFor Titles :\n\ntitles1 &lt;- page1 %&gt;% html_nodes(\".dli-title\") %&gt;% html_text()\ntitles2 &lt;- page2 %&gt;% html_nodes(\".dli-title\") %&gt;% html_text()\n\ncombined_titles &lt;- c(titles1, titles2)\n# print(combined_titles)\n\n\n\n\n\nFor Years :\n\nyears1 &lt;- page1 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(1)\") %&gt;% html_text()\nyears2 &lt;- page2 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(1)\") %&gt;% html_text()\n\ncombined_years &lt;- c(years1, years2)\n# print(combined_years)\n\n\n\n\n\nFor Durations :\n\ndurations1 &lt;- page1 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(2)\") %&gt;% html_text()\ndurations2 &lt;- page2 %&gt;% html_nodes(\".dli-title-metadata-item:nth-child(2)\") %&gt;% html_text()\n\ncombined_durations &lt;- c(durations1, durations2)\n# print(combined_durations)\n\n\n\n\n\nFor Ratings :\n\nratings1 &lt;- page1 %&gt;% html_nodes(\".ratingGroup--imdb-rating\") %&gt;% html_text()\nratings2 &lt;- page2 %&gt;% html_nodes(\".ratingGroup--imdb-rating\") %&gt;% html_text()\n\ncombined_ratings &lt;- c(ratings1, ratings2)\n# print(combined_ratings)\n\n\n\n\n\nFor Votes :\n\nvotes1 &lt;- page1 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\nvotes2 &lt;- page2 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\n\ncombined_votes &lt;- c(votes1, votes2)\n# print(combined_votes)"
  },
  {
    "objectID": "assignment22.html#string-processing",
    "href": "assignment22.html#string-processing",
    "title": "imdb_assignment",
    "section": "String Processing",
    "text": "String Processing\nWe pulled our data from the web. Now we need to make our data suitable for the data frame with string processing.\n\nFor Titles :\n\ntitle_names1 &lt;- page1 %&gt;% html_nodes('.ipc-title__text')\ntitle_names1 &lt;- html_text(title_names1)\ntitle_names1 &lt;- tail(head(title_names1,-1),-1)\ntitle_names1 &lt;- str_split(title_names1, \" \", n=2)\ntitle_names1 &lt;- unlist(lapply(title_names1, function(x) {x[2]}))\n\ntitle_names2 &lt;- page2 %&gt;% html_nodes('.ipc-title__text')\ntitle_names2 &lt;- html_text(title_names2)\ntitle_names2 &lt;- tail(head(title_names2,-1),-1)\ntitle_names2 &lt;- str_split(title_names2, \" \", n=2)\ntitle_names2 &lt;- unlist(lapply(title_names2, function(x) {x[2]}))\n\ncombined_title_names &lt;- c(title_names1, title_names2)\n# print(combined_title_names)\n\n\n\n\n\nFor Years :\nSince the year data is available, we do not need to do any processing on them.\n\n\n\n\n\nFor Durations :\n\n# For Durations - 1\n# Saat ve daikaları ayırıp tanımlıyorum :\nhours1 &lt;- as.integer(str_extract(durations1, \"\\\\d+(?=h)\"))  # For Hours\nminutes1 &lt;- as.integer(str_extract(durations1, \"\\\\d+(?=m)\"))  # For Minutes\n\nhours1[is.na(hours1)] &lt;- as.integer(\"0\")     # sadece dakika olan var ise\nminutes1[is.na(minutes1)] &lt;- as.integer(\"0\") # sadece saat olan var ise\n\n# Süreleri dakika cinsine dönüştürmek için :\ntotal_duration_minutes1 &lt;- (hours1 * 60) + minutes1\n\n\n\n# For Durations - 2\nhours2 &lt;- as.integer(str_extract(durations2, \"\\\\d+(?=h)\"))\nminutes2 &lt;- as.integer(str_extract(durations2, \"\\\\d+(?=m)\"))\n\nhours2[is.na(hours2)] &lt;- as.integer(\"0\")\nminutes2[is.na(minutes2)] &lt;- as.integer(\"0\")\n\ntotal_duration_minutes2 &lt;- (hours2 * 60) + minutes2\n\n\ncombined_durations &lt;- c(total_duration_minutes1 , total_duration_minutes2)\n# print(combined_durations)\n\n\n\n\n\nFor Votes :\n\nvotes1 &lt;- page1 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\nvotes2 &lt;- page2 %&gt;% html_nodes(\".ipc-rating-star--voteCount\") %&gt;% html_text()\n\n# From ChatGPT :\nvotes1 &lt;- str_replace_all(votes1, \"[()]\", \"\")\nvotes2 &lt;- str_replace_all(votes2, \"[()]\", \"\")\n\n# From ChatGPT :\nvotes1 &lt;- str_remove_all(votes1, \"[^0-9.K]\")\nvotes2 &lt;- str_remove_all(votes2, \"[^0-9.K]\")\n\n\nvotes_numeric1 &lt;- str_remove_all(votes1, \"K\") %&gt;% as.numeric() * 1000\nvotes_numeric2 &lt;- str_remove_all(votes2, \"K\") %&gt;% as.numeric() * 1000\n\ncombined_votes &lt;- c(votes_numeric1 , votes_numeric2)\n# print(combined_votes)\n\n\n\n\n\nFor Ratings :\n\n# Parantezleri tamamen kaldırma\nrating_no_parant1 &lt;- str_replace_all(combined_ratings, \"\\\\(.*\\\\)\", \"\")\nrating_no_parant_no_space &lt;- str_trim(str_extract(rating_no_parant1, \"^\\\\d+\\\\.?\\\\d*\"))\n\n# Simdi sayıları double tipine çevirelim : \ncombined_ratings &lt;- as.double(rating_no_parant_no_space)\n\nclass(combined_ratings)\n\n[1] \"numeric\"\n\n# print(combined_ratings)"
  },
  {
    "objectID": "assignment22.html#creating-a-data-frame",
    "href": "assignment22.html#creating-a-data-frame",
    "title": "imdb_assignment",
    "section": "Creating a Data Frame :",
    "text": "Creating a Data Frame :\nWe have completed String Processing. All the data we have obtained now is of a simple and appropriate type suitable for adding to the data frame.\n\nimdb_movies_data &lt;- data.frame(Title = combined_title_names, Year = combined_years, Duration = combined_durations, Rate = combined_ratings, Vote = combined_votes)\n\n\nhead(imdb_movies_data)\n\n                     Title Year Duration Rate  Vote\n1        Kuru Otlar Üstüne 2023      197  8.1  5100\n2  Istanbul Için Son Çagri 2023       91  5.3  7300\n3 Yedinci Kogustaki Mucize 2019      132  8.2 54000\n4           Ölümlü Dünya 2 2023      117  7.5  3400\n5                   Bihter 2023      113  3.6  3300\n6             Ölümlü Dünya 2018      107  7.6 30000"
  },
  {
    "objectID": "assignment22.html#extras",
    "href": "assignment22.html#extras",
    "title": "imdb_assignment",
    "section": "Extras",
    "text": "Extras\n\nLet’s find the 5 movies with the highest and lowest scores based on IMDb scores.\n\nimdb_movies_data_vote_decreasing &lt;- imdb_movies_data %&gt;%\n  arrange(desc(Rate))\n\n# En iyi ve en kotu 5 film :\nprint(\"En iyi oy oranına sahip 5 film:\")\n\n[1] \"En iyi oy oranına sahip 5 film:\"\n\nprint(head(imdb_movies_data_vote_decreasing, 5))\n\n                         Title Year Duration Rate  Vote\n1               Hababam Sinifi 1975       87  9.2 43000\n2       CM101MMXI Fundamentals 2013      139  9.1 47000\n3                   Tosun Pasa 1976       90  8.9 24000\n4 Hababam Sinifi Sinifta Kaldi 1975       95  8.9 24000\n5                Süt Kardesler 1976       80  8.8 21000\n\n# En alttaki 5 satırı yazdır\nprint(\"En kotu oy oranına sahip 5 film:\")\n\n[1] \"En kotu oy oranına sahip 5 film:\"\n\nprint(tail(imdb_movies_data_vote_decreasing, 5))\n\n                             Title Year Duration Rate  Vote\n466                 Cumali Ceber 2 2018      100  1.2 10000\n467                          Müjde 2022       48  1.2  9900\n468              15/07 Safak Vakti 2021       95  1.2 21000\n469 Cumali Ceber: Allah Seni Alsin 2017      100  1.0 39000\n470                           Reis 2017      108  1.0 74000\n\n\n\n\n\n\nLet’s examine the imdb data of 4 movies I like.\n\nsearch_film &lt;- function(name_of_the_film) {\n  result &lt;- imdb_movies_data[imdb_movies_data$Title == name_of_the_film, ]\n  return(result)\n}\n\nsearch_film(\"Senden Bana Kalan\")\n\n               Title Year Duration Rate Vote\n93 Senden Bana Kalan 2015      117  6.5 3400\n\nsearch_film(\"Aykut Eniste\")\n\n          Title Year Duration Rate Vote\n62 Aykut Eniste 2019      115    7 7400\n\nsearch_film(\"Kolonya Cumhuriyeti\")\n\n                  Title Year Duration Rate Vote\n115 Kolonya Cumhuriyeti 2017      110  5.8 5400\n\nsearch_film(\"Recep Ivedik 2\")\n\n             Title Year Duration Rate  Vote\n301 Recep Ivedik 2 2009      107  4.5 22000"
  },
  {
    "objectID": "assignment22.html#upgrades",
    "href": "assignment22.html#upgrades",
    "title": "imdb_assignment",
    "section": "Upgrades",
    "text": "Upgrades\nLet’s add a column to our data set showing the average rate by year.\n\nupdated_imdb_movies_data &lt;- imdb_movies_data %&gt;% \n  group_by(Year) %&gt;%\n  mutate(Mean_Rate = mean(Rate))"
  },
  {
    "objectID": "project.html#data-analytics-project",
    "href": "project.html#data-analytics-project",
    "title": "Projects",
    "section": "",
    "text": "I’m honored to be a member of the CTRL_S project team.\n\nMobile communication technologies have rapidly evolved into a thriving industry and become one of the world’s largest markets. In this context, the widespread use of mobile devices globally has created a competitive market, compelling companies to race to expand their shares. Simultaneously, the internal dynamics and market characteristics of each country have played a crucial role in shaping the market shares of mobile vendors.\nIn this project, we examined the differences between the global market shares of mobile vendors and those in Turkey, along with the underlying reasons for these differences. Initially, we sought to understand how mobile market shares were distributed worldwide. Subsequently, we shifted our focus to Turkey, analyzing the dynamics of mobile vendors' market shares in this country.\nStay Tuned : Ctrl_S Project Page"
  },
  {
    "objectID": "project.html#quality-management-project",
    "href": "project.html#quality-management-project",
    "title": "Projects",
    "section": "Quality Management Project",
    "text": "Quality Management Project\nWhen we look at the smartphone market, it’s evident that it stands as one of today’s most significant markets. Companies in this competitive field clearly adopt different strategies to stand out. They prioritize specific dimensions of quality to maximize the advantages of their phones while offering less importance to other dimensions for consumers. Consumers, in turn, consider these factors when making their purchasing decisions.\nIn this project, an attempt was made to determine the criteria Turkish smartphone users consider when purchasing phones, to define the quality dimensions they prioritize, and to understand which dimensions are of lesser importance to them. Through the conducted survey, a comparison between perceived important and less important dimensions was made to gain insights into users’ general preferences, preferred brands, and tendencies.\nPROJECT REPORT : QUALITY DIMENSIONS IN SMARTPHONES"
  }
]